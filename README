This repository contains the code used to construct the Docker image:

https://hub.docker.com/r/sorear/fedora-riscv-wip

---

This is the RISC-V Fedora userland from Richard W.M. Jones et al, repackaged
for Docker with the RISC-V QEMU fork (Alex Suykov's user mode extensions have
now been merged into the RISC-V tree).

 * About RISC-V: https://riscv.org/
 * Fedora coordinaton page: https://fedoraproject.org/wiki/Architectures/RISC-V
 * QEMU fork: https://github.com/riscv/riscv-qemu
 * Build script for this image: https://github.com/sorear/fedora-riscv-useremu

To set up a RISC-V userland testing environment, use:

    docker run -it sorear/fedora-riscv-wip

You will need binfmt_misc configured in order to actually use this; the
container checks this, and will print instructions (or if run with --privileged
it can do the configuration itself; don't do this if you care about the host
integrity, because that turns off the sandbox).

`tdnf` works in the image out of the box, downloading packages from the Fedora
RISC-V community workspace, and has a very similar command interface to dnf.
You can also use `tdnf install -y dnf` if you want.

If you want to build RPMs, you'll need to install the @buildsys-base packages:

    tdnf install -y bash bzip2 coreutils cpio diffutils elfutils \
        fedora-release findutils gawk hack-gcc glibc-headers grep gzip info \
        make patch redhat-rpm-config rpm-build sed shadow-utils tar unzip \
        util-linux which xz

/usr/bin/qemu-risv64-arsv is the pre-convergence emulator if you need it for
troubleshooting a regression.
